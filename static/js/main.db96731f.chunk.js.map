{"version":3,"sources":["logo.svg","components/Header.js","components/NewsBody.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","style","textAlign","src","logo","alt","width","height","Wrapper","styled","div","NewsBody","useState","articles","setArticles","isLoading","setIsLoading","searchQuery","setSearchQuery","postSearch","setPostSearch","useEffect","a","Axios","get","process","REACT_APP_NEWS_API_KEY","then","response","data","catch","error","console","log","fetchData","handleChange","e","target","value","handleClick","cardStyle","display","backgroundColor","mobileCardStyle","type","size","placeholder","onChange","onClick","color","map","item","Card","Grid","container","direction","xs","CardActionArea","Button","href","url","rel","CardMedia","component","image","urlToImage","title","CardContent","Typography","gutterBottom","variant","fontSize","description","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db96731f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport logo from '../logo.svg';\r\n\r\nfunction Header() {\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"App-header\" style={{textAlign: 'center'}}>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" width=\"240\" height=\"192\" />\r\n            <p style={{\"fontFamily\": 'Times New Roman'}}>News Page using React</p>\r\n        </header>\r\n      </div>\r\n    )\r\n}\r\nexport default Header","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n//import CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from '@material-ui/core/Button'\r\nimport Axios from 'axios';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styled from \"styled-components\"\r\n\r\nconst NewsBody = () => {\r\n\r\n    const [articles, setArticles] = useState([null]);\r\n  \r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const [searchQuery, setSearchQuery] = useState(\"アニメ\");\r\n\r\n    const [postSearch, setPostSearch] = useState(\"\");\r\n  \r\n    //const apiKey = process.env.REACT_APP_NEWS_API_KEY;  \r\n  \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        Axios.get(\"http://newsapi.org/v2/everything?q=\" + searchQuery + \"&apiKey=\" + process.env.REACT_APP_NEWS_API_KEY)\r\n        .then(response => {setArticles(response.data.articles); setIsLoading(false);})\r\n        .catch(error => console.log(error))\r\n      } \r\n      fetchData();\r\n    }, [searchQuery]);\r\n\r\n    const handleChange = (e) => {\r\n      console.log(e.target.value)\r\n      setPostSearch(e.target.value)\r\n    }\r\n\r\n    const handleClick = () => {\r\n      console.log(postSearch)\r\n      setSearchQuery(postSearch)\r\n    }\r\n    \r\n    var cardStyle = {\r\n      display: 'block',\r\n      width: '92.6vw',\r\n      backgroundColor: 'white'\r\n    }\r\n\r\n    var mobileCardStyle = {\r\n        display: 'block',\r\n        width: '81.6vw',\r\n        backgroundColor: 'white'\r\n    }\r\n  \r\n    return (\r\n        <ul>\r\n        <div className=\"smartphone__area\">\r\n        <div>\r\n          <input type=\"text\" size=\"35\" placeholder=\"検索したいニュースを入力してください\" value={postSearch} onChange={handleChange} />\r\n          <input type=\"button\" value=\"検索\" onClick={() => handleClick(searchQuery)}/>\r\n        </div>\r\n          {!isLoading ? (\r\n            articles.map( item => (\r\n                <li>\r\n                <Card style={mobileCardStyle}>\r\n                    <Grid container direction = \"column\">\r\n                        <Grid item xs={12}>\r\n                            {/* ニュースのサムネイル */}\r\n                            <CardActionArea>\r\n                              <Button href={item.url} target={\"_blank\"} rel=\"noopener noreferrer\">\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"ニュース画像\"\r\n                                    height=\"200\"\r\n                                    image={item.urlToImage}\r\n                                    title=\"ニュース画像\"\r\n                                />\r\n                                </Button>\r\n                            </CardActionArea>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <CardContent>\r\n                                {/* ニュースタイトル */}\r\n                                <Typography gutterBottom variant=\"inherit\">\r\n                                    <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">{item.title}</a>\r\n                                </Typography>\r\n                                {/* ニュースディスクリプション */}\r\n                                <Typography\r\n                                    fontSize=\"12px\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                    variant=\"caption\"\r\n                                >\r\n                                    {item.description}\r\n                                </Typography>\r\n                                {/* <CardActions>\r\n                                    <Button\r\n                                        size=\"small\"\r\n                                        color=\"primary\"\r\n                                        href={item.url}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        詳細を確認する\r\n                                    </Button>\r\n                                </CardActions> */}\r\n                            </CardContent>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n                </li>\r\n              )\r\n            )\r\n          ) : (<div style={{\"fontFamily\": 'Times New Roman'}}><h3 style={{color:\"white\"}}><p style={{textAlign: \"center\"}}>Loading......</p></h3></div>)\r\n          }\r\n        </div>\r\n\r\n        <div className=\"pc__area\">\r\n        <div>\r\n          <input type=\"text\" size=\"33\" placeholder=\"検索したいニュースを入力してください\" value={postSearch} onChange={handleChange}/>\r\n          <input type=\"button\" value=\"検索\" onClick={() => handleClick(searchQuery)}/>\r\n        </div>\r\n          {!isLoading ? (\r\n            articles.map( item => (\r\n                <li>\r\n                <Card style={cardStyle}>\r\n                    <Grid container>\r\n                        <Grid item xs={3}>\r\n                            {/* ニュースのサムネイル */}\r\n                            <CardActionArea>\r\n                              <Button href={item.url} target={\"_blank\"} rel=\"noopener noreferrer\">\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"ニュース画像\"\r\n                                    height=\"255\"\r\n                                    image={item.urlToImage}\r\n                                    title=\"ニュース画像\"\r\n                                />\r\n                                </Button>\r\n                            </CardActionArea>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <CardContent>\r\n                                {/* ニュースタイトル */}\r\n                                <Typography gutterBottom variant=\"h5\">\r\n                                    <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">{item.title}</a>\r\n                                </Typography>\r\n                                {/* ニュースディスクリプション */}\r\n                                <Typography\r\n                                    \r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                >\r\n                                    {item.description}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n                </li>\r\n              )\r\n            )\r\n          ) : (<Wrapper>Loading...</Wrapper>)\r\n          }\r\n        </div>\r\n        </ul>\r\n    );\r\n  }\r\n\r\n  const Wrapper = styled.div`\r\n    margin: 0 auto;\r\n    display: block;\r\n    max-width: fit-content;\r\n    color: white;\r\n    width: 100%;\r\n    font-size: 42px;\r\n    font-family: \"Times New Roman\";\r\n  `;\r\n  export default NewsBody;","import Header from './components/Header';\r\nimport NewsBody from \"./components/NewsBody\";\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n      <div>\r\n        <Header />\r\n        <NewsBody />\r\n      </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}